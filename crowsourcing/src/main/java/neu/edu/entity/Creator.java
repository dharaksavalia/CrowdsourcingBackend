package neu.edu.entity;
// Generated Dec 10, 2017 2:05:26 PM by Hibernate Tools 5.2.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Creator generated by hbm2java
 */
@Entity
@Table(name = "creator", catalog = "crowdsourcing")
public class Creator implements java.io.Serializable {

	private Integer creatorId;
	private String status;
	private String reason;
	private Date lastIdeaDate;
	private Set<User> users = new HashSet<User>(0);
	private Set<Idea> ideas = new HashSet<Idea>(0);

	public Creator() {
	}

	public Creator(String status, String reason, Date lastIdeaDate, Set<User> users, Set<Idea> ideas) {
		this.status = status;
		this.reason = reason;
		this.lastIdeaDate = lastIdeaDate;
		this.users = users;
		this.ideas = ideas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "creator_id", unique = true, nullable = false)
	public Integer getCreatorId() {
		return this.creatorId;
	}

	public void setCreatorId(Integer creatorId) {
		this.creatorId = creatorId;
	}

	@Column(name = "status", length = 50)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "reason", length = 50)
	public String getReason() {
		return this.reason;
	}

	public void setReason(String reason) {
		this.reason = reason;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_idea_date", length = 19)
	public Date getLastIdeaDate() {
		return this.lastIdeaDate;
	}

	public void setLastIdeaDate(Date lastIdeaDate) {
		this.lastIdeaDate = lastIdeaDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "creator")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "creator")
	public Set<Idea> getIdeas() {
		return this.ideas;
	}

	public void setIdeas(Set<Idea> ideas) {
		this.ideas = ideas;
	}

}
