package neu.edu.entity;
// Generated Dec 12, 2017 2:07:28 AM by Hibernate Tools 5.2.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Funding generated by hbm2java
 */
@Entity
@Table(name = "funding", catalog = "crowdsourcing")
public class Funding implements java.io.Serializable {

	private Integer fundingId;
	private Idea idea;
	private int maxUser;
	private int unit;
	private int amount;
	private Set<Purchases> purchaseses = new HashSet<Purchases>(0);

	public Funding() {
	}

	public Funding(Idea idea, int maxUser, int unit, int amount) {
		this.idea = idea;
		this.maxUser = maxUser;
		this.unit = unit;
		this.amount = amount;
	}

	public Funding(Idea idea, int maxUser, int unit, int amount, Set<Purchases> purchaseses) {
		this.idea = idea;
		this.maxUser = maxUser;
		this.unit = unit;
		this.amount = amount;
		this.purchaseses = purchaseses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "funding_id", unique = true, nullable = false)
	public Integer getFundingId() {
		return this.fundingId;
	}

	public void setFundingId(Integer fundingId) {
		this.fundingId = fundingId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idea_id", nullable = false)
	public Idea getIdea() {
		return this.idea;
	}

	public void setIdea(Idea idea) {
		this.idea = idea;
	}

	@Column(name = "max_user", nullable = false)
	public int getMaxUser() {
		return this.maxUser;
	}

	public void setMaxUser(int maxUser) {
		this.maxUser = maxUser;
	}

	@Column(name = "unit", nullable = false)
	public int getUnit() {
		return this.unit;
	}

	public void setUnit(int unit) {
		this.unit = unit;
	}

	@Column(name = "amount", nullable = false)
	public int getAmount() {
		return this.amount;
	}

	public void setAmount(int amount) {
		this.amount = amount;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "funding")
	public Set<Purchases> getPurchaseses() {
		return this.purchaseses;
	}

	public void setPurchaseses(Set<Purchases> purchaseses) {
		this.purchaseses = purchaseses;
	}

}
