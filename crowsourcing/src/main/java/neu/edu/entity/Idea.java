package neu.edu.entity;
// Generated Dec 12, 2017 2:07:28 AM by Hibernate Tools 5.2.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Idea generated by hbm2java
 */
@Entity
@Table(name = "idea", catalog = "crowdsourcing")
public class Idea implements java.io.Serializable {

	private Integer ideaId;
	private Category category;
	private Creator creator;
	private String name;
	private String description;
	private int totalFund;
	private int receivedFund;
	private String status;
	private String reason;
	private long ideaDate;
	private Set<ServiceDetail> serviceDetails = new HashSet<ServiceDetail>(0);
	private Set<Funding> fundings = new HashSet<Funding>(0);

	public Idea() {
	}

	public Idea(Category category, Creator creator, String name, String description, int totalFund, int receivedFund,
			long ideaDate) {
		this.category = category;
		this.creator = creator;
		this.name = name;
		this.description = description;
		this.totalFund = totalFund;
		this.receivedFund = receivedFund;
		this.ideaDate = ideaDate;
	}

	public Idea(Category category, Creator creator, String name, String description, int totalFund, int receivedFund,
			String status, String reason, long ideaDate, Set<ServiceDetail> serviceDetails, Set<Funding> fundings) {
		this.category = category;
		this.creator = creator;
		this.name = name;
		this.description = description;
		this.totalFund = totalFund;
		this.receivedFund = receivedFund;
		this.status = status;
		this.reason = reason;
		this.ideaDate = ideaDate;
		this.serviceDetails = serviceDetails;
		this.fundings = fundings;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idea_id", unique = true, nullable = false)
	public Integer getIdeaId() {
		return this.ideaId;
	}

	public void setIdeaId(Integer ideaId) {
		this.ideaId = ideaId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "creator_id", nullable = false)
	public Creator getCreator() {
		return this.creator;
	}

	public void setCreator(Creator creator) {
		this.creator = creator;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", nullable = false, length = 500)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "total_fund", nullable = false)
	public int getTotalFund() {
		return this.totalFund;
	}

	public void setTotalFund(int totalFund) {
		this.totalFund = totalFund;
	}

	@Column(name = "received_fund", nullable = false)
	public int getReceivedFund() {
		return this.receivedFund;
	}

	public void setReceivedFund(int receivedFund) {
		this.receivedFund = receivedFund;
	}

	@Column(name = "status", length = 50)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "reason", length = 50)
	public String getReason() {
		return this.reason;
	}

	public void setReason(String reason) {
		this.reason = reason;
	}

	@Column(name = "idea_date", nullable = false)
	public long getIdeaDate() {
		return this.ideaDate;
	}

	public void setIdeaDate(long ideaDate) {
		this.ideaDate = ideaDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "idea")
	public Set<ServiceDetail> getServiceDetails() {
		return this.serviceDetails;
	}

	public void setServiceDetails(Set<ServiceDetail> serviceDetails) {
		this.serviceDetails = serviceDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "idea")
	public Set<Funding> getFundings() {
		return this.fundings;
	}

	public void setFundings(Set<Funding> fundings) {
		this.fundings = fundings;
	}

}
