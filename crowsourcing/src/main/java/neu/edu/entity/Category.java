package neu.edu.entity;
// Generated Dec 12, 2017 2:07:28 AM by Hibernate Tools 5.2.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name = "category", catalog = "crowdsourcing", uniqueConstraints = @UniqueConstraint(columnNames = "catergory_name"))
public class Category implements java.io.Serializable {

	private Integer categoryId;
	private String catergoryName;
	private String status;
	private Set<Idea> ideas = new HashSet<Idea>(0);
	private Set<Startup> startups = new HashSet<Startup>(0);

	public Category() {
	}

	public Category(String catergoryName) {
		this.catergoryName = catergoryName;
	}

	public Category(String catergoryName, String status, Set<Idea> ideas, Set<Startup> startups) {
		this.catergoryName = catergoryName;
		this.status = status;
		this.ideas = ideas;
		this.startups = startups;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "category_id", unique = true, nullable = false)
	public Integer getCategoryId() {
		return this.categoryId;
	}

	public void setCategoryId(Integer categoryId) {
		this.categoryId = categoryId;
	}

	@Column(name = "catergory_name", unique = true, nullable = false, length = 50)
	public String getCatergoryName() {
		return this.catergoryName;
	}

	public void setCatergoryName(String catergoryName) {
		this.catergoryName = catergoryName;
	}

	@Column(name = "Status", length = 50)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
	public Set<Idea> getIdeas() {
		return this.ideas;
	}

	public void setIdeas(Set<Idea> ideas) {
		this.ideas = ideas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
	public Set<Startup> getStartups() {
		return this.startups;
	}

	public void setStartups(Set<Startup> startups) {
		this.startups = startups;
	}

}
